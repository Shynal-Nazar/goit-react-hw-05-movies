{"version":3,"file":"static/js/579.be8d0fdb.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHxC,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,oBACaR,EADb,oBAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,4BACqBR,EADrB,2BAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,4BACqBR,EADrB,2BAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,oGAEoBT,IAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,iCAC0CY,EAD1C,gCAFpB,cAEGR,EAFH,OAKGS,EAAOT,EAASS,KAChBC,EAAUD,EAAKC,QANlB,kBAOIA,GAPJ,gCASHT,QAAQC,MAAR,MATG,kF,oIC/CMS,EAAWC,EAAAA,EAAAA,GAAH,mOASRC,EAAWD,EAAAA,EAAAA,GAAH,yJ,mBCLN,SAASE,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAaS,GACVM,MAAK,SAAArB,GAAQ,OAAIA,EAASS,QAC1BY,MAAK,SAAArB,GACJmB,EAASnB,EAASsB,WAErB,CAACP,KAGF,+BAEI,SAACJ,EAAD,UACGO,EAAMK,KAAI,SAAAC,GAAK,OACd,UAACX,EAAD,YACE,gBACEY,IACED,EAAME,aAAN,UAjBC,mCAiBD,OACkBF,EAAME,cACpBC,EAENC,IAAKJ,EAAMK,KACXC,MAAM,SAER,uBAAIN,EAAMK,QACV,uCAAeL,EAAMO,eAXRP,EAAMpB,a","sources":["Api/Api.js","page/cast/Cast.styled.jsx","page/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd944f9a3c912a029f28672e84740d9ce';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    const data = response.data;\n    const results = data.results;\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  place-items: center;\n  padding-top: 20px;\n  grid-template-rows: repeat(1, 1fr);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  gap: 12px;\n`;\nexport const ListItem = styled.li`\n  width: 160px;\n  height: 100%;\n  text-align: center;\n  border: 1px solid grey;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from 'Api/Api';\nimport { CastList, ListItem } from './Cast.styled';\nimport noActor from '../../imgages/actor.jpg';\n\nexport default function Cast() {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const actorImg = 'https://image.tmdb.org/t/p/w300';\n  useEffect(() => {\n    getMovieCast(moviesId)\n      .then(response => response.data)\n      .then(response => {\n        setMovie(response.cast);\n      });\n  }, [moviesId]);\n\n  return (\n    <>\n      {\n        <CastList>\n          {movie.map(actor => (\n            <ListItem key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `${actorImg}${actor.profile_path}`\n                    : noActor\n                }\n                alt={actor.name}\n                width=\"100\"\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </ListItem>\n          ))}\n        </CastList>\n      }\n    </>\n  );\n}\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","console","error","getMovieId","id","getMovieReview","getMovieCast","getMovieByQuery","query","data","results","CastList","styled","ListItem","Cast","moviesId","useParams","useState","movie","setMovie","useEffect","then","cast","map","actor","src","profile_path","noActor","alt","name","width","character"],"sourceRoot":""}