{"version":3,"file":"static/js/322.9708da44.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHxC,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,oBACaR,EADb,oBAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,4BACqBR,EADrB,2BAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,4BACqBR,EADrB,2BAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,oGAEoBT,IAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,iCAC0CY,EAD1C,gCAFpB,cAEGR,EAFH,OAKGS,EAAOT,EAASS,KAChBC,EAAUD,EAAKC,QANlB,kBAOIA,GAPJ,gCASHT,QAAQC,MAAR,MATG,kF,0ICjCQ,SAASS,EAASC,GAC/B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,MACGmB,MAAK,SAAAjB,GAAQ,OAAIA,EAASS,QAC1BQ,MAAK,SAAAjB,GAAQ,OAAIe,EAAUf,EAASU,cACtC,KAGD,SAAC,KAAD,WACE,SAAC,KAAD,UACGI,EAAOI,KAAI,SAAAC,GAAI,OACd,SAAC,KAAD,WACE,UAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAKf,IAA1B,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEiB,IACEF,EAAKG,YAAL,0CACuCH,EAAKG,aACxCC,OAIV,UAAC,KAAD,YACE,SAAC,KAAD,UAAYJ,EAAKK,SACjB,SAAC,KAAD,UAAWL,EAAKM,sBAbJN,EAAKf,a,qQC3BpBsB,EAAgBC,EAAAA,EAAAA,IAAH,+FAMbC,EAAWD,EAAAA,EAAAA,GAAH,gOAURE,EAAcF,EAAAA,EAAAA,GAAH,mUAcXG,EAAaH,EAAAA,EAAAA,IAAH,sBAEVI,EAAUJ,EAAAA,EAAAA,IAAH,uGAOPK,EAAWL,EAAAA,EAAAA,IAAH,oGAMRM,EAAYN,EAAAA,EAAAA,GAAH,4IAQTO,EAAWP,EAAAA,EAAAA,KAAH,+J","sources":["Api/Api.js","page/homePage/HomePage.jsx","page/homePage/HomePage.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd944f9a3c912a029f28672e84740d9ce';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    const data = response.data;\n    const results = data.results;\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getTrendingMovies } from 'Api/Api';\nimport { Link } from 'layout/Content.styled';\nimport {\n  GridList,\n  GalleryCard,\n  GalleryImg,\n  CardImg,\n  CardInfo,\n  GridContainer,\n  CardTitle,\n  CardRate,\n} from './HomePage.styled';\nimport noPoster from '../../imgages/images.jpg';\n\nexport default function HomePage(movie) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(response => response.data)\n      .then(response => setMovies(response.results));\n  }, []);\n\n  return (\n    <GridContainer>\n      <GridList>\n        {movies.map(item => (\n          <GalleryCard key={item.id}>\n            <Link to={`/movies/${item.id}`}>\n              <GalleryImg>\n                <CardImg\n                  src={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${item.poster_path}`\n                      : noPoster\n                  }\n                />\n              </GalleryImg>\n              <CardInfo>\n                <CardTitle>{item.title}</CardTitle>\n                <CardRate>{item.vote_average}</CardRate>\n              </CardInfo>\n            </Link>\n          </GalleryCard>\n        ))}\n      </GridList>\n    </GridContainer>\n  );\n}\n\nHomePage.propTypes = {\n  movie: PropTypes.object,\n};\n","import styled from '@emotion/styled';\n\nexport const GridContainer = styled.div`\n  padding: 0px 30px;\n  margin: 0px auto;\n  background-color: white;\n`;\n\nexport const GridList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  gap: 30px;\n  margin: 0px auto;\n  padding: 15px 20px 0px;\n  list-style: none;\n`;\n\nexport const GalleryCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: #413e3e;\n  border-radius: 10px;\n  border: 5px solid black;\n  :hover {\n    cursor: pointer;\n    transform: scale(1.05) translateY(-5px);\n    box-shadow: rgb(0 0 0 / 55%) 0px 5px 14px 2px;\n  }\n`;\n\nexport const GalleryImg = styled.div``;\n\nexport const CardImg = styled.img`\n  width: 100%;\n  height: 355px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const CardTitle = styled.h2`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  text-transform: uppercase;\n`;\n\nexport const CardRate = styled.span`\n  padding: 0 10px;\n  margin-bottom: 5px;\n  margin-left: 10px;\n  background-color: #ef0d0d;\n  color: #fff;\n  border-radius: 5px;\n`;\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","console","error","getMovieId","id","getMovieReview","getMovieCast","getMovieByQuery","query","data","results","HomePage","movie","useState","movies","setMovies","useEffect","then","map","item","to","src","poster_path","noPoster","title","vote_average","GridContainer","styled","GridList","GalleryCard","GalleryImg","CardImg","CardInfo","CardTitle","CardRate"],"sourceRoot":""}