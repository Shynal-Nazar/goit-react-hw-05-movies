{"version":3,"file":"static/js/846.aebf1463.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAHxC,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,oBACaR,EADb,oBAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,4BACqBR,EADrB,2BAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEoBL,IAAAA,IAAA,UAClBF,EADkB,iBACDO,EADC,4BACqBR,EADrB,2BAFpB,cAEGI,EAFH,yBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,oGAEoBT,IAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,iCAC0CY,EAD1C,gCAFpB,cAEGR,EAFH,OAKGS,EAAOT,EAASS,KAChBC,EAAUD,EAAKC,QANlB,kBAOIA,GAPJ,gCASHT,QAAQC,MAAR,MATG,kF,sHC7CQ,SAASS,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAeO,GACZM,MAAK,SAAAlB,GAAQ,OAAIA,EAASS,QAC1BS,MAAK,SAAAlB,GACJgB,EAAShB,EAASU,cAErB,CAACE,KAGF,8BACGG,EAAMI,OAAS,EACdJ,EAAMK,KAAI,SAAAC,GAAM,OACd,4BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFHF,EAAOjB,QAMnB","sources":["Api/Api.js","page/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'd944f9a3c912a029f28672e84740d9ce';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieId(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieByQuery(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    const data = response.data;\n    const results = data.results;\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReview } from 'Api/Api';\n\nexport default function Reviews() {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    getMovieReview(moviesId)\n      .then(response => response.data)\n      .then(response => {\n        setMovie(response.results);\n      });\n  }, [moviesId]);\n\n  return (\n    <>\n      {movie.length > 0 ? (\n        movie.map(review => (\n          <div key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n        <p>There are no Reviews</p>\n      )}\n    </>\n  );\n}\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","console","error","getMovieId","id","getMovieReview","getMovieCast","getMovieByQuery","query","data","results","Reviews","moviesId","useParams","useState","movie","setMovie","useEffect","then","length","map","review","author","content"],"sourceRoot":""}